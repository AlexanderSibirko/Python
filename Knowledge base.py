# ========================== СПИСКИ ==========================
# x = [9, 8, 7, 6, 5, 4, 3]
# x.count(1)                  # считает сколько элементов 1 в списке
# x.append(10)                # добавляет элемент в конец списка
# x.insert(0, 22)             # добавляет элемент элемент 22 на 0 индекс 
# x.sort()                    # сортирует по возрастанию
# x.reverse()                 # записывает в обратном порядке
# x.remove(5)                 # удаляет первый попавшийся элемент равный 5
# x.clear()                   # полностью очищает список
# x.extend(['a', 's'])        # в конец списка добавляет элементы из другого списка
# x.pop()                     # удаляет крайний элемент в списке, x.pop(2) удалит 2 элемент в списке
# h = x.copy()                # копирует список
# y = x[0::2]                 # в список у запишет значения из списка х от 0 и до конца, с шагом 2
# y = x[:10:3]                # в список у запишет значения из списка х от начала и до 10, с шагом 3
# y = x[::]                   # в список у запишет значения все значения из списка х (типа скопирует)
# x = list(range(1,10))       # в ч запишет список от 1 до 9 включительно

# ========================== КОРТЕЖИ ==========================

# x = (9, 8, 7, 6, 5, 4)
# Кортеж - это не изменяемый список данных, то есть нельзя записать
# x[0] = 100, выдаст ошибку, так как нельзя внести изменения в кортеж

# ====================== МНОЖЕСТВА  =====================

# t = {'1', 2, 3,3,3,3,3, 7, 23, (2,4)}   # {'1', 2, 3, (2, 4), 23, 7} множество, не опорядочено, все перемешивает и содержит только уникальные элементы
# z = {1,2,3,4,5}
# x = {3,4,5,6,7}
# z.add(6) # добавляет элемент {1, 2, 3, 4, 5, 6}
# z.remove(6) # удаляет элемент
# z.discard(7) # удаляет элемент...если такого нет, то ошибки не возникает
# y = z.union(x) # {1, 2, 3, 4, 5, 6, 7} объединяет
# t = z.intersection(x) # пересечение с множеством{3, 4, 5}
# e = z.difference(x) #  что не встречается в x       {1, 2}
# print(e)
# ======================  СЛОВАРИ =====================

# y = {'1': 1, '2':2, '3':3, '4':4, '5':5}
# del y['1']            # { '2':2, '3':3, '4':4, '5':5} Удаляет элемент словаря по ключу 
# d1 = {'a': 7, 'b':9}
# d2 = dict([[1,2], [3,4], [5,6]])         # {'a': 7}
# d3 = dict.fromkeys([1,2,3,4,5], 'value') # {1: 'value', 2: 'value', 3: 'value', 4: 'value', 5: 'value'}
# price = {'meat': 3, 'bread': 1, 'potato': 0.5, 'water': 0.2}
# print(d1['a'])
# d1['b'] = 21

# print(d1.items())      #  dict_items([('a', 7), ('b', 9)])
# print(d1.keys())       # dict_keys(['a', 'b'])
# print(d1.values())     # dict_values([7, 9])

# d1.update(d2)
# print(d1) #         {'a': 7, 'b': 9, 1: 2, 3: 4, 5: 6}




# ====================== ЧТЕНИЕ И ЗАПИСЬ В ФАЙЛЫ  =====================

# import os                                       # перебирает все адреса к файлам
# list_path = []
# for adress, papka, file in os.walk('C:\\'):
#     for i in file:
#         full_path = os.path.join(adress, i)
#         list_path.append(full_path)


# r = open('file.txt')

# for i in r:
#     if 'read.py' in i:
#         print(i)

# r.close()

# ======================  СТРОКИ =====================

# s = 'сТрока текста'

# print(s.upper()) # СТРОКА ТЕКСТА        все заглавные
# print(s.lower())    # строка текста    все маленькие 
# print(s.capitalize()) # Строка текста     только первая большая
# print(s)

# path = 'C:\Test\papka2'
# path1 = path.replace('\\', '/')
# print(path1)

# ======================  3 лекция =====================

# list = [i for i in range(1,21) if i % 2 == 0]               # [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]

# list = [(i, i) for i in range(1,21) if i % 2 == 0]          # [(2, 2), (4, 4), (6, 6), (8, 8), (10, 10), (12, 12), (14, 14), (16, 16), (18, 18), (20, 20)]

# def f(x):                                                   # [8, 64, 216, 512, 1000, 1728, 2744, 4096, 5832, 8000]
    # return x**3
# list = [f(i) for i in range(1,21) if i % 2 == 0]

# list = [(i, f(i)) for i in range(1,21) if i % 2 == 0]       # [(2, 8), (4, 64), (6, 216), (8, 512), (10, 1000), (12, 1728), (14, 2744), (16, 4096), (18, 5832), (20, 8000)]


spis = [1, 2, 3, 5, 8, 15, 23, 38]
def f(x):                                                  
    return x**2
list = [(i, f(i)) for i in spis if i % 2 == 0]
print(list)